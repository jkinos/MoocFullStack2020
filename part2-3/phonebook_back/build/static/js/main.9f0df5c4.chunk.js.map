{"version":3,"sources":["components/Filter.js","components/Person.js","components/Persons.js","components/PersonForm.js","services/Persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","props","value","newFilter","onChange","handleFilterChange","Person","name","number","onClick","removePerson","Persons","rows","persons","filter","person","toUpperCase","includes","trim","map","key","id","PersonForm","onSubmit","addPerson","newName","handleNameChange","newNumber","handleNumberChange","type","baseUrl","axios","get","then","response","data","newObject","post","put","delete","Notification","message","className","App","useState","setPersons","setNewName","setNewNumber","setNewFilter","successMessage","setSuccessMessage","errorMessage","setErrorMessage","useEffect","personService","initialPersons","event","target","preventDefault","personObject","find","p","length","returnedPerson","concat","setTimeout","catch","error","console","log","window","confirm","remainingPersons","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9f0df5c4.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Filter = (props) => <div>filter shown with <input value = {props.newFilter} onChange={props.handleFilterChange}/></div>\r\nexport default Filter","import React from \"react\";\r\n\r\nconst Person = (props)=> <div>{props.name} {props.number} <button onClick={props.removePerson}>delete</button></div>\r\nexport default Person","import Person from \"./Person\";\r\nimport React from \"react\";\r\n\r\nconst Persons = (props) => {\r\n    const filtered = props.persons.filter(person => person.name.toUpperCase().includes(props.newFilter.trim().toUpperCase()))\r\n    const rows = filtered.map(person =>\r\n        <Person\r\n            key={person.name}\r\n            name={person.name}\r\n            number={person.number}\r\n            id={person.id}\r\n            removePerson={()=> props.removePerson(person)}\r\n        />)\r\n    return (\r\n        <div>{rows}</div>\r\n    )\r\n}\r\nexport default Persons","import React from \"react\";\r\n\r\nconst PersonForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.addPerson}>\r\n            <div>\r\n                name: <input value={props.newName} onChange={props.handleNameChange}/></div>\r\n            <div>\r\n                number: <input value={props.newNumber} onChange={props.handleNumberChange}/></div>\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nexport default PersonForm","import axios from 'axios'\r\nconst baseUrl = 'api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, remove }\r\n\r\n","import React from \"react\";\r\n\r\n\r\nconst Notification = ({ message, className }) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className={className}>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react';\nimport Filter from \"./components/Filter\";\nimport Persons from \"./components/Persons\";\nimport PersonForm from \"./components/PersonForm\";\nimport personService from\"./services/Persons\"\nimport './App.css'\nimport Notification from \"./components/Notification\";\n\nconst App = () => {\n\n    const [persons, setPersons] = useState([])\n    const [newName, setNewName ] = useState('new Name')\n    const [newNumber, setNewNumber] = useState('new Number')\n    const [newFilter, setNewFilter] = useState('')\n    const [successMessage, setSuccessMessage] = useState(null)\n    const [errorMessage,setErrorMessage] = useState(null)\n\n\n\n    useEffect(() => {\n        personService\n            .getAll()\n            .then(initialPersons => {\n                setPersons(initialPersons)\n            })\n    }, [])\n\n    const addPerson = (event) => {\n        event.preventDefault()\n        const personObject = {\n            name: newName,\n            number: newNumber\n        }\n\n        const id = () => persons.find(p => p.name === newName).id\n\n        persons.filter(person => person.name===newName).length === 0 ?\n            personService\n                .create(personObject)\n                .then(returnedPerson => {\n                    setPersons(persons.concat(returnedPerson))\n                    setNewName('')\n                    setNewNumber('')\n                    setSuccessMessage(\n                        `Added '${returnedPerson.name}'`\n                    )\n                    setTimeout(() => {\n                        setSuccessMessage(null)\n                    }, 5000)\n                }).catch(error => {\n                    console.log(error.response.data.error)\n                    setErrorMessage(\n                        error.response.data.error\n                    )\n                    setTimeout(() => {\n                        setErrorMessage(null)\n                    }, 5000)\n                setPersons(persons)\n                setNewName('')\n                setNewNumber('')\n                    })\n                :\n            window.confirm(`${newName} is already added to phonebook, replace the old number with new one?`)?\n                personService\n                    .update(id(),personObject)\n                    .then(returnedPerson => {\n                        setPersons(persons.map(person => person.id !== id() ? person : returnedPerson))\n                        setNewName('')\n                        setNewNumber('')\n                        setSuccessMessage(\n                            `Updated '${returnedPerson.name}'`\n                        )\n                        setTimeout(() => {\n                            setSuccessMessage(null)\n                        }, 5000)\n                    }).catch(error => {\n                    setErrorMessage(\n                        error.response.data.error\n                    )\n                    setTimeout(() => {\n                        setErrorMessage(null)\n                    }, 5000)\n                    setPersons(persons.filter(p => p.id !== id()))\n                    setNewName('')\n                    setNewNumber('')\n                    }):console.log(\"\")\n    }\n\n    const removePerson = (person) => {\n        const remainingPersons = persons.filter(p => p !== person)\n        const message = `Delete ${person.name}?`\n        if (window.confirm(message))\n            personService.remove(person.id)\n                .then(()=>{\n                    setPersons(remainingPersons)\n                    setSuccessMessage(\n                        `Deleted '${person.name}'`\n                    )\n                    setTimeout(() => {\n                        setSuccessMessage(null)\n                    }, 5000)\n                })\n                .catch(error => {\n                    setErrorMessage(\n                        `Information of '${person.name}' has already been removed from server`\n                    )\n                    setTimeout(() => {\n                        setErrorMessage(null)\n                    }, 5000)\n                    setPersons(persons.filter(p => p !== person))\n                })\n\n    }\n\n    const handleNameChange = (event) => setNewName(event.target.value)\n    const handleNumberChange = (event) => setNewNumber(event.target.value)\n    const handleFilterChange = (event) => setNewFilter(event.target.value)\n\n  return (\n      <div>\n        <h2>Phonebook</h2>\n          <Notification message={successMessage} className='success' />\n          <Notification message={errorMessage} className='error'/>\n          <Filter newFilter={newFilter} handleFilterChange={handleFilterChange}/>\n          <h2>add a new</h2>\n        <PersonForm addPerson={addPerson}\n              newName={newName}\n              newNumber={newNumber}\n              handleNameChange={handleNameChange}\n              handleNumberChange={handleNumberChange}/>\n        <h2>Numbers</h2>\n          <Persons persons={persons} newFilter={newFilter} removePerson={removePerson}/>\n      </div>\n  )\n\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}